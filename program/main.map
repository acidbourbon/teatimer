Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
                              main.o (__mulhi3)
/usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
                              main.o (__udivmodhi4)
/usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o (exit)
/usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

key_delay_counter   0x1               main.o
armed               0x1               main.o
countdown_seconds   0x2               main.o

Discarded input sections

 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o
 .text          0x0000000000000000        0x0 main.o
 .data          0x0000000000000000        0x0 main.o
 .bss           0x0000000000000000        0x0 main.o
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o
LOAD main.o
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/libm.a
LOAD /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/libc.a
LOAD /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x396
 *(.vectors)
 .vectors       0x0000000000000000       0x1e /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x000000000000001e                . = ALIGN (0x2)
                0x000000000000001e                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000001e        0x0 linker stubs
 *(.trampolines*)
                0x000000000000001e                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000001e                __ctors_start = .
 *(.ctors)
                0x000000000000001e                __ctors_end = .
                0x000000000000001e                __dtors_start = .
 *(.dtors)
                0x000000000000001e                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000001e        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o
                0x000000000000001e                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000001e        0x8 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000026       0x10 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                0x0000000000000026                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000036        0x4 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o
 *(.init9)
 *(.text)
 .text          0x000000000000003a        0x2 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o
                0x000000000000003a                __vector_1
                0x000000000000003a                __vector_12
                0x000000000000003a                __bad_interrupt
                0x000000000000003a                __vector_6
                0x000000000000003a                __vector_3
                0x000000000000003a                __vector_11
                0x000000000000003a                __vector_13
                0x000000000000003a                __vector_7
                0x000000000000003a                __vector_5
                0x000000000000003a                __vector_4
                0x000000000000003a                __vector_9
                0x000000000000003a                __vector_8
                0x000000000000003a                __vector_14
                0x000000000000003c                . = ALIGN (0x2)
 *(.text.*)
 .text.led_on   0x000000000000003c        0x4 main.o
                0x000000000000003c                led_on
 .text.led_off  0x0000000000000040        0x4 main.o
                0x0000000000000040                led_off
 .text.__vector_10
                0x0000000000000044       0x88 main.o
                0x0000000000000044                __vector_10
 .text.play     0x00000000000000cc       0x60 main.o
                0x00000000000000cc                play
 .text.play_bigben
                0x000000000000012c       0x48 main.o
                0x000000000000012c                play_bigben
 .text.play_coin
                0x0000000000000174       0x10 main.o
                0x0000000000000174                play_coin
 .text.play_shroom
                0x0000000000000184       0x20 main.o
                0x0000000000000184                play_shroom
 .text.__vector_2
                0x00000000000001a4       0x90 main.o
                0x00000000000001a4                __vector_2
 .text.play_cancel
                0x0000000000000234       0x18 main.o
                0x0000000000000234                play_cancel
 .text.init_io  0x000000000000024c        0xe main.o
                0x000000000000024c                init_io
 .text.init_timer
                0x000000000000025a       0x12 main.o
                0x000000000000025a                init_timer
 .text.disable_timer
                0x000000000000026c        0x4 main.o
                0x000000000000026c                disable_timer
 .text.init_button_interrupt
                0x0000000000000270        0xe main.o
                0x0000000000000270                init_button_interrupt
 .text.system_sleep
                0x000000000000027e       0x24 main.o
                0x000000000000027e                system_sleep
 .text.startup.main
                0x00000000000002a2       0xa4 main.o
                0x00000000000002a2                main
 .text.libgcc.mul
                0x0000000000000346       0x24 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
                0x0000000000000346                __mulhi3
 .text.libgcc.div
                0x000000000000036a       0x28 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
                0x000000000000036a                __udivmodhi4
                0x0000000000000392                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000392        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_exit.o)
                0x0000000000000392                exit
                0x0000000000000392                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000392        0x4 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000396                _etext = .

.data           0x0000000000800060        0x0 load address 0x0000000000000396
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800060                . = ALIGN (0x2)
                0x0000000000800060                _edata = .
                0x0000000000800060                PROVIDE (__data_end, .)

.bss            0x0000000000800060        0x5
                0x0000000000800060                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss.counter.1525
                0x0000000000800060        0x1 main.o
 *(COMMON)
 COMMON         0x0000000000800061        0x4 main.o
                0x0000000000800061                key_delay_counter
                0x0000000000800062                armed
                0x0000000000800063                countdown_seconds
                0x0000000000800065                PROVIDE (__bss_end, .)
                0x0000000000000396                __data_load_start = LOADADDR (.data)
                0x0000000000000396                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800065        0x0
                0x0000000000800065                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800065                PROVIDE (__noinit_end, .)
                0x0000000000800065                _end = .
                0x0000000000800065                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x6b4
 *(.stab)
 .stab          0x0000000000000000      0x6b4 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o

.stabstr        0x0000000000000000       0x54
 *(.stabstr)
 .stabstr       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x90
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x90 main.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x77a
 *(.debug_info)
 .debug_info    0x0000000000000000      0x77a main.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x0000000000000000      0x23b
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x23b main.o

.debug_line     0x0000000000000000      0x238
 *(.debug_line)
 .debug_line    0x0000000000000000      0x238 main.o

.debug_frame    0x0000000000000000      0x194
 *(.debug_frame)
 .debug_frame   0x0000000000000000      0x194 main.o

.debug_str      0x0000000000000000      0x1d0
 *(.debug_str)
 .debug_str     0x0000000000000000      0x1d0 main.o
                                        0x20c (size before relaxing)

.debug_loc      0x0000000000000000      0x35f
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x35f main.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x0000000000000000       0xb0
 .debug_ranges  0x0000000000000000       0xb0 main.o

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o
__bss_end                                         /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                                                  main.o
__heap_end                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o
__init                                            /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o
__mulhi3                                          /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
                                                  main.o
__stack                                           /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o
__udivmodhi4                                      /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
                                                  main.o
__vector_1                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o
__vector_10                                       main.o
                                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o
__vector_11                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o
__vector_12                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o
__vector_13                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o
__vector_14                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o
__vector_2                                        main.o
                                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o
__vector_3                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o
__vector_4                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o
__vector_5                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o
__vector_6                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o
__vector_7                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o
__vector_8                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o
__vector_9                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o
__vector_default                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o
__vectors                                         /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o
_exit                                             /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_exit.o)
armed                                             main.o
countdown_seconds                                 main.o
disable_timer                                     main.o
exit                                              /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o
init_button_interrupt                             main.o
init_io                                           main.o
init_timer                                        main.o
key_delay_counter                                 main.o
led_off                                           main.o
led_on                                            main.o
main                                              main.o
                                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn25.o
play                                              main.o
play_bigben                                       main.o
play_cancel                                       main.o
play_coin                                         main.o
play_shroom                                       main.o
system_sleep                                      main.o
